#ifndef BINARY_OP_AND_SYMBOL_AND_INPLACE
    #define BINARY_OP_AND_SYMBOL_AND_INPLACE(name, opType, symbol)
#endif

#ifndef BINARY_OP_AND_SYMBOL
    #define BINARY_OP_AND_SYMBOL(name, opType, symbol)
#endif

BINARY_OP_AND_SYMBOL_AND_INPLACE(Add, ADD, +)
// GRAPHENE_DEFINE_EXPR_BINARY_OP(Atan2, ATAN2)
BINARY_OP_AND_SYMBOL_AND_INPLACE(BitwiseAnd, BITWISE_AND, &)
BINARY_OP_AND_SYMBOL_AND_INPLACE(BitwiseOr, BITWISE_OR, |)
BINARY_OP_AND_SYMBOL_AND_INPLACE(BitwiseXor, BITWISE_XOR, ^)
// GRAPHENE_DEFINE_EXPR_BINARY_OP(BitwiseXnor, BITWISE_XNOR)
BINARY_OP_AND_SYMBOL_AND_INPLACE(Divide, DIVIDE, /)
BINARY_OP_AND_SYMBOL(Equal, EQUAL, ==)
BINARY_OP_AND_SYMBOL(Gte, GREATER_THAN_EQUAL, >=)
BINARY_OP_AND_SYMBOL(Gt, GREATER_THAN, >)
BINARY_OP_AND_SYMBOL(Lte, LESS_THAN_EQUAL, <=)
BINARY_OP_AND_SYMBOL(And, LOGICAL_AND, &&)
BINARY_OP_AND_SYMBOL(Or, LOGICAL_OR, ||)
BINARY_OP_AND_SYMBOL(Lt, LESS_THAN, <)
// GRAPHENE_DEFINE_EXPR_BINARY_OP(InvStdDevToVariance,
// INV_STD_DEV_TO_VARIANCE) GRAPHENE_DEFINE_EXPR_BINARY_OP(Max, MAXIMUM)
// GRAPHENE_DEFINE_EXPR_BINARY_OP(Min, MINIMUM)
BINARY_OP_AND_SYMBOL_AND_INPLACE(Mul, MULTIPLY, *)
BINARY_OP_AND_SYMBOL(NotEqual, NOT_EQUAL, !=)
// GRAPHENE_DEFINE_EXPR_BINARY_OP(Pow, POWER)
BINARY_OP_AND_SYMBOL_AND_INPLACE(Rem, REMAINDER, %)
BINARY_OP_AND_SYMBOL(Shl, SHIFT_LEFT, <<)
BINARY_OP_AND_SYMBOL(Shr, SHIFT_RIGHT, >>)
BINARY_OP_AND_SYMBOL_AND_INPLACE(Sub, SUBTRACT, -)

#undef BINARY_OP_AND_SYMBOL_AND_INPLACE
#undef BINARY_OP_AND_SYMBOL

#ifndef UNARY_OP
    #define UNARY_OP(name, opType)
#endif

UNARY_OP(Abs, ABSOLUTE)
UNARY_OP(Exp, EXPONENT)
#undef UNARY_OP